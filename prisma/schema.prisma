generator client {
    provider             = "prisma-client-py"
    interface            = "asyncio"
    recursive_type_depth = 5
}

datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

model User {
    id                         Int        @id @default(autoincrement())
    tel_id                     BigInt     @unique
    name                       String
    nickname                   String     @db.VarChar(255)
    student_code               String     @db.VarChar(20)
    correct_answered_questions Question[] @relation("correct_questions")
    wrong_answered_questions   Question[] @relation("wrong_questions")
    created_at                 DateTime   @default(now())
}

model Question {
    id         Int              @id @default(autoincrement())
    question   String           @db.VarChar(255)
    options    QuestionOption[]
    score      Int
    created_at DateTime         @default(now())
    deadline   DateTime
    // c means it relates to correct answered questions
    c_user     User?            @relation("correct_questions", fields: [c_user_id], references: [id])
    c_user_id  Int?
    // w means it relates to wrong answered questions
    w_user     User?            @relation("wrong_questions", fields: [w_user_id], references: [id])
    w_user_id  Int?
}

model QuestionOption {
    id          Int       @id @default(autoincrement())
    label       String    @db.VarChar(255)
    is_answer   Boolean   @default(false)
    question_id Int?
    question    Question? @relation(fields: [question_id], references: [id])
}
