generator client {
    provider             = "prisma-client-py"
    interface            = "asyncio"
    recursive_type_depth = 5
}

datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

model User {
    id                         Int            @id @default(autoincrement())
    tel_id                     BigInt         @unique
    name                       String
    nickname                   String         @db.VarChar(255)
    student_code               String         @db.VarChar(20)
    correct_answered_questions Question[]     @relation("correct_questions")
    wrong_answered_questions   Question[]     @relation("wrong_questions")
    created_at                 DateTime       @default(now())
    answered_questions_box     QuestionsBox[]
}

model Question {
    id              Int              @id @default(autoincrement())
    question        String           @db.VarChar(255)
    options         QuestionOption[]
    score           Int
    created_at      DateTime         @default(now())
    w_users         User[]           @relation("correct_questions")
    c_users         User[]           @relation("wrong_questions")
    question_box_id Int?
    question_box    QuestionsBox?    @relation(fields: [question_box_id], references: [id])
}

model QuestionOption {
    id          Int       @id @default(autoincrement())
    label       String    @db.VarChar(255)
    is_answer   Boolean   @default(false)
    question_id Int?
    question    Question? @relation(fields: [question_id], references: [id])
}

model QuestionsBox {
    id        Int        @id @default(autoincrement())
    createdAt DateTime   @default(now())
    deadline  DateTime
    questions Question[]
    users     User[]
}
